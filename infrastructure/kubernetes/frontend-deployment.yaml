apiVersion: apps/v1
kind: Deployment
metadata:
  name: nivai-frontend
  namespace: nivai
  labels:
    app: nivai
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nivai
      component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: nivai
        component: frontend
    spec:
      containers:
        - name: frontend
          image: ${ACR_REGISTRY}/nivai-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: NEXT_PUBLIC_API_URL
              value: "https://api.nivai.knvb.nl"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
      imagePullSecrets:
        - name: acr-auth
---
apiVersion: v1
kind: Service
metadata:
  name: nivai-frontend
  namespace: nivai
  labels:
    app: nivai
    component: frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: nivai
    component: frontend
