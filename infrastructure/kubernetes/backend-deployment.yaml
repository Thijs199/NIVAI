apiVersion: apps/v1
kind: Deployment
metadata:
  name: nivai-backend
  namespace: nivai
  labels:
    app: nivai
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nivai
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: nivai
        component: backend
    spec:
      containers:
        - name: backend
          image: ${ACR_REGISTRY}/nivai-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: nivai-db-credentials
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: nivai-db-credentials
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: nivai-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nivai-db-credentials
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: nivai-db-credentials
                  key: database
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: nivai-config
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: nivai-config
                  key: redis-port
            - name: AZURE_STORAGE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: nivai-azure-storage
                  key: account-name
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: nivai-azure-storage
                  key: account-key
            - name: AZURE_STORAGE_CONTAINER
              valueFrom:
                secretKeyRef:
                  name: nivai-azure-storage
                  key: container-name
            - name: EXTERNAL_DATA_PATH
              value: "/data/external"
          volumeMounts:
            - name: external-data
              mountPath: /data/external
              readOnly: false
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: external-data
          persistentVolumeClaim:
            claimName: nivai-fileshare-pvc
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 10000
      imagePullSecrets:
        - name: acr-auth
---
apiVersion: v1
kind: Service
metadata:
  name: nivai-backend
  namespace: nivai
  labels:
    app: nivai
    component: backend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: nivai
    component: backend
